import java.util.EventListener;

import java.util.EventObject;

class CustomEvent extends EventObject {
    protected String msg;
    
    public CustomEvent(Object source, String msg) {
        super(source);
        this.msg = msg;
    }
    
    public String getMsg() {
        return this.msg;
    }
}

interface CustomListener extends EventListener {
    public void processCustomEvent(CustomEvent event);
}

class CustomAdapter implements EventListener {
    public void processCustomEvent(CustomEvent event) {
    }
}

import javax.swing.event.EventListenerList;

class MyComponent {
    protected EventListenerList listenerList;
    /** 리스너 등록 */
    public void addCustomListener(CustomListener listener) {
        listenerList.add(CustomListener.class, listener);
    }
    /** 리스너 삭제 */
    public void removeCustomListener(CustomListener listener) {
       listenerList.remove(CustomListener.class, listener);
   }
    /** 리스너 반환 */
    public CustomListener[] getCustomListeners() {
        return (CustomListener[]) getListeners(CustomListener.class);
    }
    public EventListener[] getListeners(Class clazz) {
       return listenerList.getListeners(clazz);
    }
    /** 이벤트를 발생시키고 모든 리스너에게 공지 */
    protected void fireCustomEvent(CustomEvent event) {
        Object[] list = listenerList.getListenerList();
        for(int i = 0; i < list.length; i += 2){
            Class listenerClass = (Class) list[i];
            if( listenerClass == CustomListener.class ){
                CustomListener listener = (CustomListener) list[i+1];
                listener.processCustomEvent(event);
            }
        }
    }

    public void eventOccured(){
        fireCustomEvent(new CustomEvent(this, "Event occurrence."));
    }
}
